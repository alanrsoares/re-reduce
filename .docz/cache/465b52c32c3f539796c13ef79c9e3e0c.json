{"remainingRequest":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js!/Users/alanrsoares/dev/re-reduced/examples/ToDo/ToDoApp.tsx","dependencies":[{"path":"/Users/alanrsoares/dev/re-reduced/examples/ToDo/ToDoApp.tsx","mtime":1557712553956},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557712913498},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js","mtime":1553212856450},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js","mtime":1557712913458},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js","mtime":1553206056663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/alanrsoares/dev/re-reduced/examples/ToDo/ToDoApp.tsx"],"names":["React","connectWithActions","actions","selectors","FILTERS","App","props","state","filter","editingId","undefined","newToDoTitle","handleSelectFilter","e","preventDefault","setState","handleSelectForEdit","todo","stopPropagation","isCompleted","id","handleDelete","handleNewToDoChange","target","value","handleNewToDoKeyDown","key","add","title","handleEditingToDoKeyDown","update","handleEditingToDoBlur","handleToggleAll","everyCompleted","filteredItems","every","forEach","handleClearCompleted","completedTodos","handleToggleToDo","renderItem","className","renderFilter","fetch","renderBody","renderFooter","renderList","map","isLoading","isAdding","todos","length","Object","keys","Active","activeTodos","Completed","Component","enhance","getToDos","getActiveToDos","getCompletedToDos","getToDosIsFetching","getToDosIsAdding"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nimport { connectWithActions } from \"../../src\";\n\nimport actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport { ToDo, Filter, FILTERS } from \"./types\";\n\nimport \"./styles.css\";\n\ninterface Props {\n  todos: ToDo[];\n  activeTodos: ToDo[];\n  completedTodos: ToDo[];\n  isLoading: boolean;\n  isAdding: boolean;\n  title: string;\n  actions: typeof actions;\n}\n\ninterface State {\n  filter: Filter;\n  newToDoTitle: string;\n  editingId: string | undefined;\n}\n\nclass App extends React.Component<Props, State> {\n  public state: State = {\n    filter: \"All\",\n    editingId: undefined,\n    newToDoTitle: \"\"\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    props.actions.fetch();\n  }\n\n  get filteredItems() {\n    switch (this.state.filter) {\n      case FILTERS.Active:\n        return this.props.activeTodos;\n      case FILTERS.Completed:\n        return this.props.completedTodos;\n      default:\n        return this.props.todos;\n    }\n  }\n\n  public handleSelectFilter = (filter: Filter) => e => {\n    e.preventDefault();\n    this.setState({ filter });\n  };\n\n  public handleSelectForEdit = (todo: ToDo) => e => {\n    e.stopPropagation();\n    if (!todo.isCompleted) {\n      this.setState({ editingId: todo.id });\n    } else {\n      this.setState({ editingId: undefined });\n    }\n  };\n\n  public handleDelete = (todo: ToDo) => () => {\n    this.props.actions.delete(todo.id);\n  };\n\n  public handleNewToDoChange = e => {\n    this.setState({ newToDoTitle: e.target.value });\n  };\n\n  public handleNewToDoKeyDown = e => {\n    if (e.key === \"Enter\") {\n      this.props.actions.add({\n        title: e.target.value\n      });\n      this.setState({ newToDoTitle: \"\" });\n    }\n  };\n\n  public handleEditingToDoKeyDown = (todo: ToDo) => e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      this.props.actions.update({\n        ...todo,\n        title: e.target.value\n      });\n      this.setState({ editingId: undefined });\n    }\n  };\n\n  public handleEditingToDoBlur = () => {\n    this.setState({ editingId: undefined });\n  };\n\n  public handleToggleAll = () => {\n    const everyCompleted = this.filteredItems.every(todo => todo.isCompleted);\n\n    this.setState({ editingId: undefined });\n    this.filteredItems.forEach(todo =>\n      this.props.actions.update({\n        ...todo,\n        isCompleted: !everyCompleted\n      })\n    );\n  };\n\n  public handleClearCompleted = () => {\n    this.props.completedTodos.forEach(todo =>\n      this.props.actions.delete(todo.id)\n    );\n  };\n\n  public handleToggleToDo = (todo: ToDo) => () => {\n    if (this.state.editingId === todo.id) {\n      return;\n    }\n\n    this.props.actions.update({\n      ...todo,\n      isCompleted: !todo.isCompleted\n    });\n\n    this.setState({ editingId: undefined });\n  };\n\n  public render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>{this.props.title}</h1>\n          <input\n            autoFocus\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.newToDoTitle}\n            onChange={this.handleNewToDoChange}\n            onKeyDown={this.handleNewToDoKeyDown}\n          />\n        </header>\n        {this.renderBody()}\n        {this.renderFooter()}\n      </section>\n    );\n  }\n\n  public renderBody() {\n    return (\n      <section className=\"main\">\n        <input\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          onChange={this.handleToggleAll}\n          defaultChecked={this.filteredItems.every(todo => todo.isCompleted)}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        {this.renderList()}\n      </section>\n    );\n  }\n\n  public renderList() {\n    return (\n      <ul className=\"todo-list\">\n        {this.filteredItems.map(this.renderItem)}\n        {(this.props.isLoading || this.props.isAdding) && (\n          <li>\n            <div className=\"view\">\n              <label className=\"loading\">\n                {this.props.isLoading ? \"Loading todos\" : \"Adding new todo\"}\n              </label>\n            </div>\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  public renderItem = (todo: ToDo) => {\n    const className = todo.isCompleted\n      ? \"completed\"\n      : this.state.editingId === todo.id\n      ? \"editing\"\n      : undefined;\n\n    return (\n      <li key={todo.id} className={className}>\n        <div className=\"view\">\n          <input\n            readOnly\n            id={`checkbox-${todo.id}`}\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.isCompleted}\n            onChange={this.handleToggleToDo(todo)}\n          />\n          <label\n            htmlFor={`checkbox-${todo.id}`}\n            onDoubleClick={this.handleSelectForEdit(todo)}\n          >\n            {todo.title}\n          </label>\n          <button className=\"destroy\" onClick={this.handleDelete(todo)} />\n        </div>\n        <input\n          className=\"edit\"\n          defaultValue={todo.title}\n          onKeyDown={this.handleEditingToDoKeyDown(todo)}\n          onBlur={this.handleEditingToDoBlur}\n        />\n      </li>\n    );\n  };\n\n  public renderFooter() {\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>\n            {this.props.todos.length - this.props.completedTodos.length}\n          </strong>{\" \"}\n          item left\n        </span>\n        <ul className=\"filters\">\n          {Object.keys(FILTERS).map(this.renderFilter)}\n        </ul>\n        <button className=\"clear-completed\" onClick={this.handleClearCompleted}>\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n\n  public renderFilter = (filter: Filter) => {\n    return (\n      <li key={filter}>\n        <a\n          className={this.state.filter === filter ? \"selected\" : undefined}\n          href=\"#\"\n          onClick={this.handleSelectFilter(filter)}\n        >\n          {filter}\n        </a>\n      </li>\n    );\n  };\n}\n\ninterface OwnProps {\n  title: string;\n}\n\nconst enhance = connectWithActions<Props, OwnProps>(actions, {\n  todos: selectors.getToDos,\n  activeTodos: selectors.getActiveToDos,\n  completedTodos: selectors.getCompletedToDos,\n  isLoading: selectors.getToDosIsFetching,\n  isAdding: selectors.getToDosIsAdding\n});\n\nexport default enhance(App);\n"]}]}