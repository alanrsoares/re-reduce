{"remainingRequest":"/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/alanrsoares/dev/re-reduced/node_modules/docz/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js!/Users/alanrsoares/dev/re-reduced/docs/api-reference.mdx","dependencies":[{"path":"/Users/alanrsoares/dev/re-reduced/docs/api-reference.mdx","mtime":1557713069354},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557712913498},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js","mtime":1557712913458},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/docz/node_modules/@mdx-js/loader/index.js","mtime":1557712913830},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js","mtime":1553206056663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/alanrsoares/dev/re-reduced/docs/api-reference.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"api-reference\"\n    }}>{`API Reference`}</h1>\n    <h2 {...{\n      \"id\": \"createaction\"\n    }}>{`createAction`}</h2>\n    <p>{`Returns a Flux Standard ActionCreator`}</p>\n    <h3 {...{\n      \"id\": \"params\"\n    }}>{`Params:`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`type: string`}</li>\n      <li parentName=\"ul\">{`namespace (optional): string`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createAction } from \"re-reduced\";\n\nconst action1 = createAction(\"DO_SOMETHING\");\n\nconsole.log(action1.type); // => \"DO_SOMETHING\"\n\nconst action2 = createAction(\"DO_SOMETHING\", \"NAMESPACE\");\n\nconsole.log(action2.type); // => \"NAMESPACE/DO_SOMETHING\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"createasyncaction\"\n    }}>{`createAsyncAction`}</h2>\n    <p>{`Returns a composite action-creator with nested action-creators for request, success and failure`}</p>\n    <h3 {...{\n      \"id\": \"usage-1\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createAsyncAction } from \"re-reduced\";\n\nconst doSomethingAsync = createAsyncAction(\"DO_SOMETHING_ASYNC\");\n\nconsole.log(doSomethingAsync.type); // => \"DO_SOMETHING_ASYNC\"\nconsole.log(doSomethingAsync.request.type); // => \"DO_SOMETHING_ASYNC_REQUEST\"\nconsole.log(doSomethingAsync.success.type); // => \"DO_SOMETHING_ASYNC_SUCCESS\"\nconsole.log(doSomethingAsync.failure.type); // => \"DO_SOMETHING_ASYNC_FAILURE\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"createactions\"\n    }}>{`createActions`}</h2>\n    <p>{`A helper function to create bundled actions`}</p>\n    <h3 {...{\n      \"id\": \"params-1\"\n    }}>{`Params`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`namespace (optional): string`}</li>\n      <li parentName=\"ul\">{`actionsContructor: api: CreateActionsAPI => ActionCreatorMap`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h3>\n    <p>{`With namespace`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createActions } from \"re-reduced\";\n\nconst counterActions = createActions(\"COUNTER\", create => ({\n  inc: create.action(),\n  dec: create.action(),\n  adjust: create.action<number>()\n}));\n\nconsole.log(counterActions.inc.type); // => \"COUNTER/INC\"\nconsole.log(counterActions.dec.type); // => \"COUNTER/INC\"\nconsole.log(counterActions.adjust.type); // => \"COUNTER/ADJUST\"\n`}</code></pre>\n    <p>{`Alternatively, `}<inlineCode parentName=\"p\">{`createActions`}</inlineCode>{` can be used with no namespace:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createActions } from \"re-reduced\";\n\nconst myActions = createActions(create => ({\n  doSomething: create.action(),\n  doSomethingAsync: create.asyncAction()\n}));\n\nconsole.log(myActions.doSomething.type); // => \"DO_SOMETHING\"\nconsole.log(myActions.doSomethingAsync.type); // => \"DO_SOMETHING_ASYNC\"\nconsole.log(myActions.doSomethingAsync.request.type); // => \"DO_SOMETHING_ASYNC_REQUEST\"\nconsole.log(myActions.doSomethingAsync.success.type); // => \"DO_SOMETHING_ASYNC_SUCCESS\"\nconsole.log(myActions.doSomethingAsync.failure.type); // => \"DO_SOMETHING_ASYNC_FAILURE\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"createreducer\"\n    }}>{`createReducer`}</h2>\n    <p>{`A utility function that returns a typesafe reducer`}</p>\n    <h2 {...{\n      \"id\": \"connectwithactions\"\n    }}>{`connectWithActions`}</h2>\n    <p>{`A utility wrapper on top of react-redux's connect that automatically adds actions to the component's props as a map of self-dispatchable action-creators`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}