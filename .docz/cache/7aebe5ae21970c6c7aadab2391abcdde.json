{"remainingRequest":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js!/Users/alanrsoares/dev/re-reduced/examples/Counter/reducers.ts","dependencies":[{"path":"/Users/alanrsoares/dev/re-reduced/examples/Counter/reducers.ts","mtime":1557712553966},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557712913498},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js","mtime":1553212856450},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js","mtime":1557712913458},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js","mtime":1553206056663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKaW1wb3J0IHsgY29tYmluZVJlZHVjZXJzIH0gZnJvbSAicmVkdXgiOwppbXBvcnQgeyBjcmVhdGVSZWR1Y2VyIH0gZnJvbSAiLi4vLi4vc3JjIjsKaW1wb3J0IGFjdGlvbnMgZnJvbSAiLi9hY3Rpb25zIjsKdmFyIElOSVRJQUxfU1RBVEUgPSAwOwpleHBvcnQgdmFyIGNvdW50ZXIgPSBjcmVhdGVSZWR1Y2VyKFthY3Rpb25zLmluY3JlbWVudC5yZWR1Y2UoZnVuY3Rpb24gKHN0YXRlKSB7CiAgcmV0dXJuIHN0YXRlICsgMTsKfSksIGFjdGlvbnMuZGVjcmVtZW50LnJlZHVjZShmdW5jdGlvbiAoc3RhdGUpIHsKICByZXR1cm4gc3RhdGUgLSAxOwp9KSwgYWN0aW9ucy5hZGp1c3QucmVkdWNlKGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogIHJldHVybiBzdGF0ZSArIHBheWxvYWQ7Cn0pXSwgSU5JVElBTF9TVEFURSk7CgppZiAodHlwZW9mIGNvdW50ZXIgIT09ICd1bmRlZmluZWQnICYmIGNvdW50ZXIgJiYgY291bnRlciA9PT0gT2JqZWN0KGNvdW50ZXIpICYmIE9iamVjdC5pc0V4dGVuc2libGUoY291bnRlcikpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY291bnRlciwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogImNvdW50ZXIiLAogICAgICBmaWxlbmFtZTogImV4YW1wbGVzL0NvdW50ZXIvcmVkdWNlcnMudHMiCiAgICB9CiAgfSk7Cn0KCnZhciBfZGVmYXVsdCA9IGNvbWJpbmVSZWR1Y2Vycyh7CiAgY291bnRlcjogY291bnRlcgp9KTsKCmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0Owo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKElOSVRJQUxfU1RBVEUsICJJTklUSUFMX1NUQVRFIiwgIi9Vc2Vycy9hbGFucnNvYXJlcy9kZXYvcmUtcmVkdWNlZC9leGFtcGxlcy9Db3VudGVyL3JlZHVjZXJzLnRzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoY291bnRlciwgImNvdW50ZXIiLCAiL1VzZXJzL2FsYW5yc29hcmVzL2Rldi9yZS1yZWR1Y2VkL2V4YW1wbGVzL0NvdW50ZXIvcmVkdWNlcnMudHMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL2FsYW5yc29hcmVzL2Rldi9yZS1yZWR1Y2VkL2V4YW1wbGVzL0NvdW50ZXIvcmVkdWNlcnMudHMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/Users/alanrsoares/dev/re-reduced/examples/Counter/reducers.ts"],"names":["combineReducers","createReducer","actions","INITIAL_STATE","counter","increment","reduce","state","decrement","adjust","payload"],"mappings":";;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,aAAT,QAAqC,WAArC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAGA,IAAMC,aAAa,GAAG,CAAtB;AAEA,OAAO,IAAMC,OAAO,GAAGH,aAAa,CAClC,CACEC,OAAO,CAACG,SAAR,CAAkBC,MAAlB,CAAyB,UAAAC,KAAK;AAAA,SAAIA,KAAK,GAAG,CAAZ;AAAA,CAA9B,CADF,EAEEL,OAAO,CAACM,SAAR,CAAkBF,MAAlB,CAAyB,UAAAC,KAAK;AAAA,SAAIA,KAAK,GAAG,CAAZ;AAAA,CAA9B,CAFF,EAGEL,OAAO,CAACO,MAAR,CAAeH,MAAf,CAAsB,UAACC,KAAD,EAAQG,OAAR;AAAA,SAAoBH,KAAK,GAAGG,OAA5B;AAAA,CAAtB,CAHF,CADkC,EAMlCP,aANkC,CAA7B;;;;;;;;;;;;;eASQH,eAAe,CAAQ;AACpCI,EAAAA,OAAO,EAAPA;AADoC,CAAR,C;;AAA9B;;;;;;;;;;0BAXMD,a;0BAEOC,O","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport { createReducer, match } from \"../../src\";\n\nimport actions from \"./actions\";\nimport { State } from \"./types\";\n\nconst INITIAL_STATE = 0;\n\nexport const counter = createReducer<number>(\n  [\n    actions.increment.reduce(state => state + 1),\n    actions.decrement.reduce(state => state - 1),\n    actions.adjust.reduce((state, payload) => state + payload)\n  ],\n  INITIAL_STATE\n);\n\nexport default combineReducers<State>({\n  counter\n});\n"]}]}