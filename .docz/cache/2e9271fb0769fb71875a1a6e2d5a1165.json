{"remainingRequest":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js!/Users/alanrsoares/dev/re-reduced/src/lib/reducers.ts","dependencies":[{"path":"/Users/alanrsoares/dev/re-reduced/src/lib/reducers.ts","mtime":1557714458227},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557712913498},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js","mtime":1553212856450},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js","mtime":1557712913458},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js","mtime":1553206056663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FsYW5yc29hcmVzL2Rldi9yZS1yZWR1Y2VkL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKaW1wb3J0IG1lcmdlQWxsIGZyb20gInJhbWRhL3NyYy9tZXJnZUFsbCI7CmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZWR1Y2VyKGhhbmRsZXJzLCBpbml0aWFsU3RhdGUpIHsKICB2YXIgJGhhbmRsZXJzID0gQXJyYXkuaXNBcnJheShoYW5kbGVycykgPyBtZXJnZUFsbChoYW5kbGVycykgOiBoYW5kbGVyczsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgdmFyIHN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBpbml0aWFsU3RhdGU7CiAgICB2YXIgYWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7CiAgICB2YXIgYWN0aW9uUmVkdWNlciA9ICRoYW5kbGVyc1thY3Rpb24udHlwZV07CgogICAgaWYgKHR5cGVvZiBhY3Rpb25SZWR1Y2VyID09PSAiZnVuY3Rpb24iKSB7CiAgICAgIHJldHVybiBhY3Rpb25SZWR1Y2VyKHN0YXRlLCBhY3Rpb24ucGF5bG9hZCk7CiAgICB9CgogICAgcmV0dXJuIHN0YXRlOwogIH07Cn0KLyoqCiAqICBAZGVwcmVjYXRlZCB0ZW1wb3JhcnkgYWxpYXMgZm9yIGNyZWF0ZVJlZHVjZXIKICovCgppZiAodHlwZW9mIGNyZWF0ZVJlZHVjZXIgIT09ICd1bmRlZmluZWQnICYmIGNyZWF0ZVJlZHVjZXIgJiYgY3JlYXRlUmVkdWNlciA9PT0gT2JqZWN0KGNyZWF0ZVJlZHVjZXIpICYmIE9iamVjdC5pc0V4dGVuc2libGUoY3JlYXRlUmVkdWNlcikpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY3JlYXRlUmVkdWNlciwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogImNyZWF0ZVJlZHVjZXIiLAogICAgICBmaWxlbmFtZTogInNyYy9saWIvcmVkdWNlcnMudHMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCB2YXIgaGFuZGxlQWN0aW9ucyA9IGNyZWF0ZVJlZHVjZXI7CgppZiAodHlwZW9mIGhhbmRsZUFjdGlvbnMgIT09ICd1bmRlZmluZWQnICYmIGhhbmRsZUFjdGlvbnMgJiYgaGFuZGxlQWN0aW9ucyA9PT0gT2JqZWN0KGhhbmRsZUFjdGlvbnMpICYmIE9iamVjdC5pc0V4dGVuc2libGUoaGFuZGxlQWN0aW9ucykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaGFuZGxlQWN0aW9ucywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogImhhbmRsZUFjdGlvbnMiLAogICAgICBmaWxlbmFtZTogInNyYy9saWIvcmVkdWNlcnMudHMiCiAgICB9CiAgfSk7Cn0KCmlmICh0eXBlb2YgSW5mZXJQYXlsb2FkICE9PSAndW5kZWZpbmVkJyAmJiBJbmZlclBheWxvYWQgJiYgSW5mZXJQYXlsb2FkID09PSBPYmplY3QoSW5mZXJQYXlsb2FkKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEluZmVyUGF5bG9hZCkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSW5mZXJQYXlsb2FkLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiSW5mZXJQYXlsb2FkIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvbGliL3JlZHVjZXJzLnRzIgogICAgfQogIH0pOwp9CgovKioKICogcmVnaXN0ZXJzIGEgcmVkdWNlciBoYW5kbGVyIGZvciBvbmUgb3IgbWFueSBhY3Rpb25zCiAqCiAqIEBwYXJhbSBhY3Rpb24KICogQHBhcmFtIHJlZHVjZXIKICovCmV4cG9ydCBmdW5jdGlvbiBtYXRjaChhY3Rpb25zLCByZWR1Y2VyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYWN0aW9ucykpIHsKICAgIHJldHVybiBhY3Rpb25zLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBhY3Rpb24pIHsKICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIGFjYywgYWN0aW9uLnJlZHVjZShyZWR1Y2VyKSk7CiAgICB9LCB7fSk7CiAgfSBlbHNlIHsKICAgIHJldHVybiBhY3Rpb25zLnJlZHVjZShyZWR1Y2VyKTsKICB9Cn0KCmlmICh0eXBlb2YgbWF0Y2ggIT09ICd1bmRlZmluZWQnICYmIG1hdGNoICYmIG1hdGNoID09PSBPYmplY3QobWF0Y2gpICYmIE9iamVjdC5pc0V4dGVuc2libGUobWF0Y2gpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG1hdGNoLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAibWF0Y2giLAogICAgICBmaWxlbmFtZTogInNyYy9saWIvcmVkdWNlcnMudHMiCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoY3JlYXRlUmVkdWNlciwgImNyZWF0ZVJlZHVjZXIiLCAiL1VzZXJzL2FsYW5yc29hcmVzL2Rldi9yZS1yZWR1Y2VkL3NyYy9saWIvcmVkdWNlcnMudHMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihoYW5kbGVBY3Rpb25zLCAiaGFuZGxlQWN0aW9ucyIsICIvVXNlcnMvYWxhbnJzb2FyZXMvZGV2L3JlLXJlZHVjZWQvc3JjL2xpYi9yZWR1Y2Vycy50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKG1hdGNoLCAibWF0Y2giLCAiL1VzZXJzL2FsYW5yc29hcmVzL2Rldi9yZS1yZWR1Y2VkL3NyYy9saWIvcmVkdWNlcnMudHMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/Users/alanrsoares/dev/re-reduced/src/lib/reducers.ts"],"names":["mergeAll","createReducer","handlers","initialState","$handlers","Array","isArray","state","action","actionReducer","type","payload","handleActions","match","actions","reducer","reduce","acc"],"mappings":";;;;;;;AACA,OAAOA,QAAP,MAAqB,oBAArB;AAIA,OAAO,SAASC,aAAT,CACLC,QADK,EAELC,YAFK,EAGY;AACjB,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcJ,QAAd,IACbF,QAAQ,CAACE,QAAD,CADK,GAEdA,QAFJ;AAIA,SAAO,YAAkC;AAAA,QAAjCK,KAAiC,uEAAzBJ,YAAyB;AAAA,QAAXK,MAAW;AACvC,QAAMC,aAAa,GAAGL,SAAS,CAACI,MAAM,CAACE,IAAR,CAA/B;;AAEA,QAAI,OAAOD,aAAP,KAAyB,UAA7B,EAAyC;AACvC,aAAOA,aAAa,CAACF,KAAD,EAAQC,MAAM,CAACG,OAAf,CAApB;AACD;;AAED,WAAOJ,KAAP;AACD,GARD;AASD;AAED;;;;;;;;;;;;;;;AAGA,OAAO,IAAMK,aAAa,GAAGX,aAAtB;;;;;;;;;;;;;;;;;;;;;;;;AAQP;;;;;;AAMA,OAAO,SAASY,KAAT,CAILC,OAJK,EAKLC,OALK,EAMqB;AAC1B,MAAIV,KAAK,CAACC,OAAN,CAAcQ,OAAd,CAAJ,EAA4B;AAC1B,WAAOA,OAAO,CAACE,MAAR,CACL,UAACC,GAAD,EAAMT,MAAN;AAAA,+BACKS,GADL,EAEKT,MAAM,CAACQ,MAAP,CAAcD,OAAd,CAFL;AAAA,KADK,EAKL,EALK,CAAP;AAOD,GARD,MAQO;AACL,WAAQD,OAAD,CAAmDE,MAAnD,CAA0DD,OAA1D,CAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;0BAtDed,a;0BAsBHW,a;0BAcGC,K","sourcesContent":["import { Reducer } from \"redux\";\nimport mergeAll from \"ramda/src/mergeAll\";\n\nimport { ActionReducerMap, ActionCreator, ActionReducer } from \"./core\";\n\nexport function createReducer<TState>(\n  handlers: ActionReducerMap<TState> | Array<ActionReducerMap<TState>>,\n  initialState: TState\n): Reducer<TState> {\n  const $handlers = Array.isArray(handlers)\n    ? (mergeAll(handlers) as ActionReducerMap<TState>)\n    : handlers;\n\n  return (state = initialState, action) => {\n    const actionReducer = $handlers[action.type];\n\n    if (typeof actionReducer === \"function\") {\n      return actionReducer(state, action.payload);\n    }\n\n    return state;\n  };\n}\n\n/**\n *  @deprecated temporary alias for createReducer\n */\nexport const handleActions = createReducer;\n\nexport type InferPayload<T> = T extends Array<ActionCreator<infer U>>\n  ? U\n  : T extends ActionCreator<infer P>\n  ? P\n  : never;\n\n/**\n * registers a reducer handler for one or many actions\n *\n * @param action\n * @param reducer\n */\nexport function match<\n  TState,\n  TActions extends ActionCreator<any> | Array<ActionCreator<any>>\n>(\n  actions: TActions,\n  reducer: ActionReducer<TState, InferPayload<TActions>>\n): ActionReducerMap<TState> {\n  if (Array.isArray(actions)) {\n    return actions.reduce(\n      (acc, action) => ({\n        ...acc,\n        ...action.reduce(reducer),\n      }),\n      {}\n    );\n  } else {\n    return (actions as ActionCreator<InferPayload<TActions>>).reduce(reducer);\n  }\n}\n"]}]}