{"remainingRequest":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js!/Users/alanrsoares/dev/re-reduced/src/lib/core.ts","dependencies":[{"path":"/Users/alanrsoares/dev/re-reduced/src/lib/core.ts","mtime":1557714538271},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557712913498},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/thread-loader/dist/cjs.js","mtime":1553212856450},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/babel-loader/lib/index.js","mtime":1557712913458},{"path":"/Users/alanrsoares/dev/re-reduced/node_modules/source-map-loader/index.js","mtime":1553206056663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEEgRmx1eC1TdGFuZGFyZC1BY3Rpb24gKEZTQSkKICovCmlmICh0eXBlb2YgQWN0aW9uICE9PSAndW5kZWZpbmVkJyAmJiBBY3Rpb24gJiYgQWN0aW9uID09PSBPYmplY3QoQWN0aW9uKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEFjdGlvbikpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQWN0aW9uLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQWN0aW9uIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvbGliL2NvcmUudHMiCiAgICB9CiAgfSk7Cn0KCmlmICh0eXBlb2YgQXN5bmNBY3Rpb24gIT09ICd1bmRlZmluZWQnICYmIEFzeW5jQWN0aW9uICYmIEFzeW5jQWN0aW9uID09PSBPYmplY3QoQXN5bmNBY3Rpb24pICYmIE9iamVjdC5pc0V4dGVuc2libGUoQXN5bmNBY3Rpb24pKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEFzeW5jQWN0aW9uLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQXN5bmNBY3Rpb24iLAogICAgICBmaWxlbmFtZTogInNyYy9saWIvY29yZS50cyIKICAgIH0KICB9KTsKfQoKaWYgKHR5cGVvZiBBY3Rpb25SZWR1Y2VyICE9PSAndW5kZWZpbmVkJyAmJiBBY3Rpb25SZWR1Y2VyICYmIEFjdGlvblJlZHVjZXIgPT09IE9iamVjdChBY3Rpb25SZWR1Y2VyKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEFjdGlvblJlZHVjZXIpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEFjdGlvblJlZHVjZXIsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJBY3Rpb25SZWR1Y2VyIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvbGliL2NvcmUudHMiCiAgICB9CiAgfSk7Cn0KCmlmICh0eXBlb2YgQWN0aW9uUmVkdWNlck1hcCAhPT0gJ3VuZGVmaW5lZCcgJiYgQWN0aW9uUmVkdWNlck1hcCAmJiBBY3Rpb25SZWR1Y2VyTWFwID09PSBPYmplY3QoQWN0aW9uUmVkdWNlck1hcCkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShBY3Rpb25SZWR1Y2VyTWFwKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBY3Rpb25SZWR1Y2VyTWFwLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQWN0aW9uUmVkdWNlck1hcCIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2xpYi9jb3JlLnRzIgogICAgfQogIH0pOwp9CgppZiAodHlwZW9mIEFjdGlvbkNyZWF0b3JPcHRpb25zICE9PSAndW5kZWZpbmVkJyAmJiBBY3Rpb25DcmVhdG9yT3B0aW9ucyAmJiBBY3Rpb25DcmVhdG9yT3B0aW9ucyA9PT0gT2JqZWN0KEFjdGlvbkNyZWF0b3JPcHRpb25zKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEFjdGlvbkNyZWF0b3JPcHRpb25zKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBY3Rpb25DcmVhdG9yT3B0aW9ucywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkFjdGlvbkNyZWF0b3JPcHRpb25zIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvbGliL2NvcmUudHMiCiAgICB9CiAgfSk7Cn0KCmlmICh0eXBlb2YgQWN0aW9uQ3JlYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgQWN0aW9uQ3JlYXRvciAmJiBBY3Rpb25DcmVhdG9yID09PSBPYmplY3QoQWN0aW9uQ3JlYXRvcikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShBY3Rpb25DcmVhdG9yKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBY3Rpb25DcmVhdG9yLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQWN0aW9uQ3JlYXRvciIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2xpYi9jb3JlLnRzIgogICAgfQogIH0pOwp9"},{"version":3,"sources":["/Users/alanrsoares/dev/re-reduced/src/lib/core.ts"],"names":[],"mappings":"AAAA","sourcesContent":["/**\n * A Flux-Standard-Action (FSA)\n */\nexport interface Action<T = void, TMeta = any> {\n  type: string;\n  payload: T;\n  meta?: TMeta;\n  error?: boolean;\n}\n\n/**\n * A composite Action to handle async workflows with nested actions for request, success and failure\n */\nexport interface AsyncAction<TResult, TPayload = void, TError = Error>\n  extends ActionCreator<TPayload> {\n  request: ActionCreator<void>;\n  success: ActionCreator<TResult>;\n  failure: ActionCreator<TError>;\n}\n\n/**\n * A reducer-like function that is handled by a specific action\n */\nexport type ActionReducer<TState, TPayload> = (\n  state: TState,\n  payload: TPayload\n) => TState;\n\n/**\n * A map-like structure where values are action-reducers\n */\nexport interface ActionReducerMap<TState> {\n  [key: string]: ActionReducer<TState, any>;\n}\n\n/**\n * Optional configuration for action-creators\n */\nexport interface ActionCreatorOptions<TMeta> {\n  meta?: TMeta;\n  error?: boolean;\n}\n\n/**\n * An action-creator is a function capable of creating a type-safe Flux Standard Action (FSA)\n */\nexport interface ActionCreator<TPayload = void, TMeta = any> {\n  (payload: TPayload, options?: ActionCreatorOptions<TMeta>): Action<\n    TPayload,\n    TMeta\n  >;\n  type: string;\n  reduce<TState>(\n    fn: ActionReducer<TState, TPayload>\n  ): {\n    [key: string]: ActionReducer<TState, TPayload>;\n  };\n\n  fold<TState>(\n    fn: (payload: TPayload, state: TState) => TState\n  ): {\n    [key: string]: ActionReducer<TState, TPayload>;\n  };\n}\n"]}]}